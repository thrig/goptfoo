goptfoo(3) - utility functions for command-line option parsing

build and install direct from the repository via something like:

  export AUTOMAKE_VERSION=1.16
  export AUTOCONF_VERSION=2.69
  autoreconf -i

and then with gcc to enable stack protection 

  CC=gcc \
  CFLAGS="-pedantic -O2 -Wall -fstack-protector-all -fPIC -fPIE -pie -pipe" \
  ./configure [--prefix=...] && make && make install
  make && make install

or instead use `./configure --help` and inspect the available options


how to avoid LD_LIBRARY_PATH

in particular, the --enable-the-rpath or --enable-macos-rpath flags to
./configure may help select a better set of linker flags should goptfoo
be installed to a software depot outside the usual search path. that is,
on Mac OS X

  CC=gcc \
  CFLAGS="-pedantic -O2 -Wall -fstack-protector-all -fPIC -fPIE -pie -pipe" \
  ./configure --enable-macos-rpath --prefix=$HOME/usr/Darwin15.6.0-x86_64
  make && make install

or on OpenBSD

  doas pkg_add libtool automake autoconf
  CFLAGS="-pedantic -O2 -Wall -fstack-protector-all -fPIC -fPIE -pie -pipe" \
  ./configure --enable-the-rpath \
    --prefix=$HOME/usr/`uname``uname -r`-`uname -m`
  make && make install

or on Linux, except the software depot path cannot really use `uname
...` as on Mac OS X or OpenBSD, so one kluge is to use the distribution
name and version

  CFLAGS="-pedantic -O2 -Wall -fstack-protector-all -fPIC -fPIE -pie -pipe" \
  ./configure --enable-the-rpath --prefix=$HOME/usr/centos7-x86_64


pkg-config

these custom install directories do require that pkg-config(1) be aware
of them; e.g. on OpenBSD the shell might be configured via

  PKG_CONFIG_PATH="$HOME/usr/`uname``uname -r`-`uname -m`/lib/pkgconfig:/usr/local/lib/pkgconfig"
  export PKG_CONFIG_PATH

and then to use that while compiling things that use goptfoo:

  blah: blah.c
        $(CC) $(CFLAGS) `pkg-config --cflags --libs goptfoo` blah.c -o blah


Documentation

goptfoo(3) contains a list of available functions and example code; see
also the demo/ directory of this distribution, or various scripts under

https://github.com/thrig/scripts/


Bugs

https://github.com/thrig/goptfoo

though the intent is not to greatly complicate this code, which means no
gettext for fancy internationalized error messages, nor error handling
beyond simply calling err() to bail the process when things go awry


Portability

portability has not been much tested, with my usage being mostly
confined to Mac OS X (10.11), OpenBSD (5.9-6.5), and much less Linux
(RedHat EL 6, Centos 7)
